
mjime051_lab3_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000182  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000916  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000857  00000000  00000000  00000b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a3  00000000  00000000  00001391  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001634  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041d  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d2  00000000  00000000  00001a95  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001b67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	17 d0       	rcall	.+46     	; 0xc8 <main>
  9a:	47 c0       	rjmp	.+142    	; 0x12a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <SetBit>:
unsigned char SetBit(unsigned char changedBin, unsigned char position, unsigned char newBit) {
	return (newBit ? changedBin | (0x01 << position) : changedBin & ~(0x01 << position));
}
unsigned char GetBit(unsigned char position, unsigned char k) {
	return ((position & (0x01 << k)) != 0);
}
  9e:	44 23       	and	r20, r20
  a0:	49 f0       	breq	.+18     	; 0xb4 <SetBit+0x16>
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	30 e0       	ldi	r19, 0x00	; 0
  a6:	02 c0       	rjmp	.+4      	; 0xac <SetBit+0xe>
  a8:	22 0f       	add	r18, r18
  aa:	33 1f       	adc	r19, r19
  ac:	6a 95       	dec	r22
  ae:	e2 f7       	brpl	.-8      	; 0xa8 <SetBit+0xa>
  b0:	82 2b       	or	r24, r18
  b2:	08 95       	ret
  b4:	21 e0       	ldi	r18, 0x01	; 1
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <SetBit+0x20>
  ba:	22 0f       	add	r18, r18
  bc:	33 1f       	adc	r19, r19
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <SetBit+0x1c>
  c2:	20 95       	com	r18
  c4:	82 23       	and	r24, r18
  c6:	08 95       	ret

000000c8 <main>:

int main(void)
{
	DDRA = 0x00; PORTA = 0x00; // Configure port A's 8 pins as inputs
  c8:	11 b8       	out	0x01, r1	; 1
  ca:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00; //Configure port B's 8 pins as outputs
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	84 b9       	out	0x04, r24	; 4
  d0:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; // Configure port C's 8 pins as outputs,
  d2:	87 b9       	out	0x07, r24	; 7
  d4:	18 b8       	out	0x08, r1	; 8
	unsigned char tmpB = 0x00;
	unsigned char tmpC = 0x00;
	while(1)
	{
		tmpB = 0x00;
		tmpC = 0x00;
  d6:	d1 2c       	mov	r13, r1
unsigned char GetBit(unsigned char position, unsigned char k) {
	return ((position & (0x01 << k)) != 0);
}

int main(void)
{
  d8:	04 e0       	ldi	r16, 0x04	; 4
  da:	10 e0       	ldi	r17, 0x00	; 0
  dc:	c0 e0       	ldi	r28, 0x00	; 0
  de:	d0 e0       	ldi	r29, 0x00	; 0
	unsigned char tmpB = 0x00;
	unsigned char tmpC = 0x00;
	while(1)
	{
		tmpB = 0x00;
		tmpC = 0x00;
  e0:	fd 2c       	mov	r15, r13
	// initialize to 0s
	unsigned char tmpB = 0x00;
	unsigned char tmpC = 0x00;
	while(1)
	{
		tmpB = 0x00;
  e2:	ed 2c       	mov	r14, r13
		tmpC = 0x00;
		for (unsigned char i = 0x00; i < 4; i++)
		{
			tmpB = SetBit(tmpB, i, GetBit(PINA, 4 + i));
  e4:	40 b1       	in	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	00 2e       	mov	r0, r16
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <main+0x28>
  ec:	55 95       	asr	r21
  ee:	47 95       	ror	r20
  f0:	0a 94       	dec	r0
  f2:	e2 f7       	brpl	.-8      	; 0xec <main+0x24>
  f4:	41 70       	andi	r20, 0x01	; 1
  f6:	6c 2f       	mov	r22, r28
  f8:	8e 2d       	mov	r24, r14
  fa:	d1 df       	rcall	.-94     	; 0x9e <SetBit>
  fc:	e8 2e       	mov	r14, r24
			tmpC = SetBit(tmpC, 4+i, GetBit(PINA, i));
  fe:	40 b1       	in	r20, 0x00	; 0
 100:	50 e0       	ldi	r21, 0x00	; 0
 102:	0c 2e       	mov	r0, r28
 104:	02 c0       	rjmp	.+4      	; 0x10a <main+0x42>
 106:	55 95       	asr	r21
 108:	47 95       	ror	r20
 10a:	0a 94       	dec	r0
 10c:	e2 f7       	brpl	.-8      	; 0x106 <main+0x3e>
 10e:	41 70       	andi	r20, 0x01	; 1
 110:	60 2f       	mov	r22, r16
 112:	8f 2d       	mov	r24, r15
 114:	c4 df       	rcall	.-120    	; 0x9e <SetBit>
 116:	f8 2e       	mov	r15, r24
 118:	21 96       	adiw	r28, 0x01	; 1
 11a:	0f 5f       	subi	r16, 0xFF	; 255
 11c:	1f 4f       	sbci	r17, 0xFF	; 255
	unsigned char tmpC = 0x00;
	while(1)
	{
		tmpB = 0x00;
		tmpC = 0x00;
		for (unsigned char i = 0x00; i < 4; i++)
 11e:	c4 30       	cpi	r28, 0x04	; 4
 120:	d1 05       	cpc	r29, r1
 122:	01 f7       	brne	.-64     	; 0xe4 <main+0x1c>
		{
			tmpB = SetBit(tmpB, i, GetBit(PINA, 4 + i));
			tmpC = SetBit(tmpC, 4+i, GetBit(PINA, i));
		}
		PORTB = tmpB;
 124:	e5 b8       	out	0x05, r14	; 5
		PORTC = tmpC;
 126:	88 b9       	out	0x08, r24	; 8
	}
 128:	d7 cf       	rjmp	.-82     	; 0xd8 <main+0x10>

0000012a <_exit>:
 12a:	f8 94       	cli

0000012c <__stop_program>:
 12c:	ff cf       	rjmp	.-2      	; 0x12c <__stop_program>
