
mjime051_lab10_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000007da  0000086e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800104  00800104  00000872  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000872  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000008e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3e  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d1  00000000  00000000  000015a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005ab  00000000  00000000  00001e73  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  00002420  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b7  00000000  00000000  00002538  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001e6  00000000  00000000  00002aef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002cd5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6d c0       	rjmp	.+218    	; 0x110 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ed       	ldi	r30, 0xDA	; 218
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f0 d1       	rcall	.+992    	; 0x4a4 <main>
  c4:	88 c3       	rjmp	.+1808   	; 0x7d6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
	set_PWM(0);
}

void PWM_off() {
	TCCR3A = 0x00;
	TCCR3B = 0x00;
  c8:	8b e0       	ldi	r24, 0x0B	; 11
  ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  ce:	8d e7       	ldi	r24, 0x7D	; 125
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
  f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
  f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
  f8:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_avr_timer_cntcurr>
  fc:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_avr_timer_cntcurr+0x1>
 100:	a0 93 0f 01 	sts	0x010F, r26	; 0x80010f <_avr_timer_cntcurr+0x2>
 104:	b0 93 10 01 	sts	0x0110, r27	; 0x800110 <_avr_timer_cntcurr+0x3>
 108:	8f b7       	in	r24, 0x3f	; 63
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8f bf       	out	0x3f, r24	; 63
 10e:	08 95       	ret

00000110 <__vector_13>:
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	af 93       	push	r26
 120:	bf 93       	push	r27
 122:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <_avr_timer_cntcurr>
 126:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <_avr_timer_cntcurr+0x1>
 12a:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <_avr_timer_cntcurr+0x2>
 12e:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <_avr_timer_cntcurr+0x3>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	a1 09       	sbc	r26, r1
 136:	b1 09       	sbc	r27, r1
 138:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_avr_timer_cntcurr>
 13c:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_avr_timer_cntcurr+0x1>
 140:	a0 93 0f 01 	sts	0x010F, r26	; 0x80010f <_avr_timer_cntcurr+0x2>
 144:	b0 93 10 01 	sts	0x0110, r27	; 0x800110 <_avr_timer_cntcurr+0x3>
 148:	89 2b       	or	r24, r25
 14a:	8a 2b       	or	r24, r26
 14c:	8b 2b       	or	r24, r27
 14e:	99 f4       	brne	.+38     	; 0x176 <__vector_13+0x66>
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <TimerFlag>
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 15a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 15e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 162:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 166:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_avr_timer_cntcurr>
 16a:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_avr_timer_cntcurr+0x1>
 16e:	a0 93 0f 01 	sts	0x010F, r26	; 0x80010f <_avr_timer_cntcurr+0x2>
 172:	b0 93 10 01 	sts	0x0110, r27	; 0x800110 <_avr_timer_cntcurr+0x3>
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <TimerSet>:
 188:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 18c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 190:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 194:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 198:	60 93 0d 01 	sts	0x010D, r22	; 0x80010d <_avr_timer_cntcurr>
 19c:	70 93 0e 01 	sts	0x010E, r23	; 0x80010e <_avr_timer_cntcurr+0x1>
 1a0:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_avr_timer_cntcurr+0x2>
 1a4:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <_avr_timer_cntcurr+0x3>
 1a8:	08 95       	ret

000001aa <set_PWM>:
 1aa:	cf 92       	push	r12
 1ac:	df 92       	push	r13
 1ae:	ef 92       	push	r14
 1b0:	ff 92       	push	r15
 1b2:	6b 01       	movw	r12, r22
 1b4:	7c 01       	movw	r14, r24
 1b6:	9b 01       	movw	r18, r22
 1b8:	ac 01       	movw	r20, r24
 1ba:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <current_frequency.1621>
 1be:	70 91 08 01 	lds	r23, 0x0108	; 0x800108 <current_frequency.1621+0x1>
 1c2:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <current_frequency.1621+0x2>
 1c6:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <current_frequency.1621+0x3>
 1ca:	8c d1       	rcall	.+792    	; 0x4e4 <__cmpsf2>
 1cc:	88 23       	and	r24, r24
 1ce:	09 f4       	brne	.+2      	; 0x1d2 <set_PWM+0x28>
 1d0:	4f c0       	rjmp	.+158    	; 0x270 <set_PWM+0xc6>
 1d2:	20 e0       	ldi	r18, 0x00	; 0
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	a9 01       	movw	r20, r18
 1d8:	c7 01       	movw	r24, r14
 1da:	b6 01       	movw	r22, r12
 1dc:	83 d1       	rcall	.+774    	; 0x4e4 <__cmpsf2>
 1de:	81 11       	cpse	r24, r1
 1e0:	06 c0       	rjmp	.+12     	; 0x1ee <set_PWM+0x44>
 1e2:	e1 e9       	ldi	r30, 0x91	; 145
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	88 70       	andi	r24, 0x08	; 8
 1ea:	80 83       	st	Z, r24
 1ec:	05 c0       	rjmp	.+10     	; 0x1f8 <set_PWM+0x4e>
 1ee:	e1 e9       	ldi	r30, 0x91	; 145
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	83 60       	ori	r24, 0x03	; 3
 1f6:	80 83       	st	Z, r24
 1f8:	28 e5       	ldi	r18, 0x58	; 88
 1fa:	39 e3       	ldi	r19, 0x39	; 57
 1fc:	44 e7       	ldi	r20, 0x74	; 116
 1fe:	5f e3       	ldi	r21, 0x3F	; 63
 200:	c7 01       	movw	r24, r14
 202:	b6 01       	movw	r22, r12
 204:	6f d1       	rcall	.+734    	; 0x4e4 <__cmpsf2>
 206:	88 23       	and	r24, r24
 208:	3c f4       	brge	.+14     	; 0x218 <set_PWM+0x6e>
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	9f ef       	ldi	r25, 0xFF	; 255
 20e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 212:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 216:	23 c0       	rjmp	.+70     	; 0x25e <set_PWM+0xb4>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	34 e2       	ldi	r19, 0x24	; 36
 21c:	44 ef       	ldi	r20, 0xF4	; 244
 21e:	56 e4       	ldi	r21, 0x46	; 70
 220:	c7 01       	movw	r24, r14
 222:	b6 01       	movw	r22, r12
 224:	71 d2       	rcall	.+1250   	; 0x708 <__gesf2>
 226:	18 16       	cp	r1, r24
 228:	2c f4       	brge	.+10     	; 0x234 <set_PWM+0x8a>
 22a:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 22e:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 232:	15 c0       	rjmp	.+42     	; 0x25e <set_PWM+0xb4>
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	40 e0       	ldi	r20, 0x00	; 0
 23a:	53 e4       	ldi	r21, 0x43	; 67
 23c:	c7 01       	movw	r24, r14
 23e:	b6 01       	movw	r22, r12
 240:	67 d2       	rcall	.+1230   	; 0x710 <__mulsf3>
 242:	9b 01       	movw	r18, r22
 244:	ac 01       	movw	r20, r24
 246:	60 e0       	ldi	r22, 0x00	; 0
 248:	74 e2       	ldi	r23, 0x24	; 36
 24a:	84 ef       	ldi	r24, 0xF4	; 244
 24c:	9a e4       	ldi	r25, 0x4A	; 74
 24e:	4e d1       	rcall	.+668    	; 0x4ec <__divsf3>
 250:	b5 d1       	rcall	.+874    	; 0x5bc <__fixsfsi>
 252:	61 50       	subi	r22, 0x01	; 1
 254:	71 09       	sbc	r23, r1
 256:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 25a:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 25e:	16 bc       	out	0x26, r1	; 38
 260:	c0 92 07 01 	sts	0x0107, r12	; 0x800107 <current_frequency.1621>
 264:	d0 92 08 01 	sts	0x0108, r13	; 0x800108 <current_frequency.1621+0x1>
 268:	e0 92 09 01 	sts	0x0109, r14	; 0x800109 <current_frequency.1621+0x2>
 26c:	f0 92 0a 01 	sts	0x010A, r15	; 0x80010a <current_frequency.1621+0x3>
 270:	ff 90       	pop	r15
 272:	ef 90       	pop	r14
 274:	df 90       	pop	r13
 276:	cf 90       	pop	r12
 278:	08 95       	ret

0000027a <PWM_on>:
 27a:	80 e4       	ldi	r24, 0x40	; 64
 27c:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 280:	8b e0       	ldi	r24, 0x0B	; 11
 282:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	cb 01       	movw	r24, r22
 28c:	8e cf       	rjmp	.-228    	; 0x1aa <set_PWM>
 28e:	08 95       	ret

00000290 <TickThree>:
enum combineStates {COMBINE_INIT, COMBINED} combineState;
enum buzzerStates {INIT, WAIT_BUFFER, WAIT, OFF, ON} buzzerState;

void TickThree(){
	static char three_cnt;
	switch(threeState){
 290:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <threeState>
 294:	81 30       	cpi	r24, 0x01	; 1
 296:	51 f0       	breq	.+20     	; 0x2ac <TickThree+0x1c>
 298:	28 f0       	brcs	.+10     	; 0x2a4 <TickThree+0x14>
 29a:	82 30       	cpi	r24, 0x02	; 2
 29c:	b9 f0       	breq	.+46     	; 0x2cc <TickThree+0x3c>
 29e:	83 30       	cpi	r24, 0x03	; 3
 2a0:	29 f1       	breq	.+74     	; 0x2ec <TickThree+0x5c>
 2a2:	34 c0       	rjmp	.+104    	; 0x30c <TickThree+0x7c>
		case THREE_INIT:
			threeState = LIGHT_ONE;
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <threeState>
			break;
 2aa:	3b c0       	rjmp	.+118    	; 0x322 <TickThree+0x92>
		case LIGHT_ONE:
			if(three_cnt < 150)
 2ac:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <three_cnt.1652>
 2b0:	86 39       	cpi	r24, 0x96	; 150
 2b2:	20 f4       	brcc	.+8      	; 0x2bc <TickThree+0x2c>
			{
				threeState = LIGHT_ONE;
				three_cnt++;
 2b4:	8f 5f       	subi	r24, 0xFF	; 255
 2b6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <three_cnt.1652>
 2ba:	33 c0       	rjmp	.+102    	; 0x322 <TickThree+0x92>
			}
			else if (three_cnt == 150)
 2bc:	86 39       	cpi	r24, 0x96	; 150
 2be:	89 f5       	brne	.+98     	; 0x322 <TickThree+0x92>
			{
				threeState = LIGHT_TWO;
 2c0:	82 e0       	ldi	r24, 0x02	; 2
 2c2:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <threeState>
				three_cnt = 0x00;
 2c6:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <three_cnt.1652>
 2ca:	2f c0       	rjmp	.+94     	; 0x32a <TickThree+0x9a>
			}
			break;
		case LIGHT_TWO:
			if(three_cnt < 150)
 2cc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <three_cnt.1652>
 2d0:	86 39       	cpi	r24, 0x96	; 150
 2d2:	20 f4       	brcc	.+8      	; 0x2dc <TickThree+0x4c>
			{
				threeState = LIGHT_TWO;
				three_cnt++;
 2d4:	8f 5f       	subi	r24, 0xFF	; 255
 2d6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <three_cnt.1652>
 2da:	27 c0       	rjmp	.+78     	; 0x32a <TickThree+0x9a>
			}
			else if (three_cnt == 150)
 2dc:	86 39       	cpi	r24, 0x96	; 150
 2de:	29 f5       	brne	.+74     	; 0x32a <TickThree+0x9a>
			{
				threeState = LIGHT_THREE;
 2e0:	83 e0       	ldi	r24, 0x03	; 3
 2e2:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <threeState>
				three_cnt = 0x00;
 2e6:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <three_cnt.1652>
 2ea:	17 c0       	rjmp	.+46     	; 0x31a <TickThree+0x8a>
			}
			break;
		case LIGHT_THREE:
			if(three_cnt < 150)
 2ec:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <three_cnt.1652>
 2f0:	86 39       	cpi	r24, 0x96	; 150
 2f2:	20 f4       	brcc	.+8      	; 0x2fc <TickThree+0x6c>
			{
				threeState = LIGHT_THREE;
				three_cnt++;
 2f4:	8f 5f       	subi	r24, 0xFF	; 255
 2f6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <three_cnt.1652>
 2fa:	0f c0       	rjmp	.+30     	; 0x31a <TickThree+0x8a>
			}
			else if (three_cnt == 150)
 2fc:	86 39       	cpi	r24, 0x96	; 150
 2fe:	69 f4       	brne	.+26     	; 0x31a <TickThree+0x8a>
			{
				threeState = LIGHT_ONE;
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <threeState>
				three_cnt = 0x00;
 306:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <three_cnt.1652>
 30a:	0b c0       	rjmp	.+22     	; 0x322 <TickThree+0x92>
			}
			break;
		default:
			threeState = THREE_INIT;
 30c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <threeState>
			break;
	}
	switch(threeState){
		case THREE_INIT:
			threeLED = 0x00;
 310:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <threeLED>
			three_cnt = 0x00;
 314:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <three_cnt.1652>
			threeLED = 0x04;
			break;
		default:
			break;
	}
}
 318:	08 95       	ret
			break;
		case LIGHT_TWO:
			threeLED = 0x02;
			break;
		case LIGHT_THREE:
			threeLED = 0x04;
 31a:	84 e0       	ldi	r24, 0x04	; 4
 31c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <threeLED>
			break;
 320:	08 95       	ret
		case THREE_INIT:
			threeLED = 0x00;
			three_cnt = 0x00;
			break;
		case LIGHT_ONE:
			threeLED = 0x01;
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <threeLED>
			break;
 328:	08 95       	ret
		case LIGHT_TWO:
			threeLED = 0x02;
 32a:	82 e0       	ldi	r24, 0x02	; 2
 32c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <threeLED>
 330:	08 95       	ret

00000332 <TickBlink>:
	}
}

void TickBlink(){
	static short blink_cnt;
	switch(blinkState){
 332:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <blinkState>
 336:	81 30       	cpi	r24, 0x01	; 1
 338:	b9 f0       	breq	.+46     	; 0x368 <TickBlink+0x36>
 33a:	18 f0       	brcs	.+6      	; 0x342 <TickBlink+0x10>
 33c:	82 30       	cpi	r24, 0x02	; 2
 33e:	29 f0       	breq	.+10     	; 0x34a <TickBlink+0x18>
 340:	22 c0       	rjmp	.+68     	; 0x386 <TickBlink+0x54>
		case BLINK_INIT:
			blinkState = BLINK_OFF;
 342:	82 e0       	ldi	r24, 0x02	; 2
 344:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <blinkState>
			break;
 348:	27 c0       	rjmp	.+78     	; 0x398 <TickBlink+0x66>
		case BLINK_OFF:
			if(blink_cnt < 500){
 34a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 34e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 352:	84 3f       	cpi	r24, 0xF4	; 244
 354:	91 40       	sbci	r25, 0x01	; 1
 356:	04 f1       	brlt	.+64     	; 0x398 <TickBlink+0x66>
				blinkState = BLINK_OFF;
			}
			else if (blink_cnt >= 500)
			{
				blinkState = BLINK_ON;
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <blinkState>
				blink_cnt = 0x00;
 35e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
 362:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
 366:	24 c0       	rjmp	.+72     	; 0x3b0 <TickBlink+0x7e>
			}
			break;
		case BLINK_ON:
			if(blink_cnt < 500){
 368:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 36c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 370:	84 3f       	cpi	r24, 0xF4	; 244
 372:	91 40       	sbci	r25, 0x01	; 1
 374:	ec f0       	brlt	.+58     	; 0x3b0 <TickBlink+0x7e>
				blinkState = BLINK_ON;
			}
			else if (blink_cnt >= 500)
			{
				blinkState = BLINK_OFF;
 376:	82 e0       	ldi	r24, 0x02	; 2
 378:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <blinkState>
				blink_cnt = 0x00;
 37c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
 380:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
 384:	09 c0       	rjmp	.+18     	; 0x398 <TickBlink+0x66>
			}
			break;
		default:
			blinkState = BLINK_INIT;
 386:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <blinkState>
			break;
	}
	switch(blinkState){
		case BLINK_INIT:
			blinkLED = 0x00;
 38a:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <blinkLED>
			blink_cnt = 0x00;
 38e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
 392:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
			++blink_cnt;
			break;
		default:
			break;
	}
}
 396:	08 95       	ret
		case BLINK_INIT:
			blinkLED = 0x00;
			blink_cnt = 0x00;
			break;
		case BLINK_OFF:
			blinkLED = 0x00;
 398:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <blinkLED>
			++blink_cnt;
 39c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 3a0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 3a4:	01 96       	adiw	r24, 0x01	; 1
 3a6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 3aa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
			break;
 3ae:	08 95       	ret
		case BLINK_ON:
			blinkLED = 0x08;
 3b0:	88 e0       	ldi	r24, 0x08	; 8
 3b2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <blinkLED>
			++blink_cnt;
 3b6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 3ba:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 3be:	01 96       	adiw	r24, 0x01	; 1
 3c0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 3c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 3c8:	08 95       	ret

000003ca <TickCombine>:
			break;
	}
}

void TickCombine(){
	switch(combineState){
 3ca:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <combineState>
 3ce:	88 23       	and	r24, r24
 3d0:	19 f0       	breq	.+6      	; 0x3d8 <TickCombine+0xe>
 3d2:	81 30       	cpi	r24, 0x01	; 1
 3d4:	41 f0       	breq	.+16     	; 0x3e6 <TickCombine+0x1c>
 3d6:	04 c0       	rjmp	.+8      	; 0x3e0 <TickCombine+0x16>
		case COMBINE_INIT:
			combineState = COMBINED;
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <combineState>
			break;
 3de:	03 c0       	rjmp	.+6      	; 0x3e6 <TickCombine+0x1c>
		case COMBINED:
			combineState = COMBINED;
			break;
		default:
			combineState = COMBINE_INIT;
 3e0:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <combineState>
			PORTB = threeLED + blinkLED;
			break;
		default:
			break;
	}
}
 3e4:	08 95       	ret
	}
	switch(combineState){
		case COMBINE_INIT:
			break;
		case COMBINED:
			PORTB = threeLED + blinkLED;
 3e6:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <threeLED>
 3ea:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <blinkLED>
 3ee:	89 0f       	add	r24, r25
 3f0:	85 b9       	out	0x05, r24	; 5
 3f2:	08 95       	ret

000003f4 <TickBuzz>:
	}
}

void TickBuzz(unsigned char button){
	//static char buzzcnt;
	switch(buzzerState){
 3f4:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <buzzerState>
 3f8:	92 30       	cpi	r25, 0x02	; 2
 3fa:	91 f0       	breq	.+36     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3fc:	28 f4       	brcc	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fe:	99 23       	and	r25, r25
 400:	41 f0       	breq	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	91 30       	cpi	r25, 0x01	; 1
 404:	51 f0       	breq	.+20     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 406:	36 c0       	rjmp	.+108    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 408:	93 30       	cpi	r25, 0x03	; 3
 40a:	09 f1       	breq	.+66     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 40c:	94 30       	cpi	r25, 0x04	; 4
 40e:	41 f1       	breq	.+80     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 410:	31 c0       	rjmp	.+98     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
		case INIT:
			buzzerState = WAIT;
 412:	82 e0       	ldi	r24, 0x02	; 2
 414:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
			break;
 418:	35 c0       	rjmp	.+106    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
		case WAIT_BUFFER:
			if(button == 0x04){
 41a:	84 30       	cpi	r24, 0x04	; 4
 41c:	a1 f4       	brne	.+40     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
			}
			else{
				buzzerState = WAIT;
			}
		case WAIT:
			if (button == 0x04)
 420:	84 30       	cpi	r24, 0x04	; 4
 422:	89 f4       	brne	.+34     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
			{
				buzzerState = ON;
 424:	84 e0       	ldi	r24, 0x04	; 4
 426:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
				PWM_on();
 42a:	27 df       	rcall	.-434    	; 0x27a <PWM_on>
			break;
		default:
			buzzerState = INIT;
			break;
	}
	switch(buzzerState){
 42c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <buzzerState>
 430:	82 30       	cpi	r24, 0x02	; 2
 432:	41 f1       	breq	.+80     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 434:	18 f4       	brcc	.+6      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 436:	81 30       	cpi	r24, 0x01	; 1
 438:	a1 f5       	brne	.+104    	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 43a:	1f c0       	rjmp	.+62     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 43c:	83 30       	cpi	r24, 0x03	; 3
 43e:	39 f1       	breq	.+78     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 440:	84 30       	cpi	r24, 0x04	; 4
 442:	51 f1       	breq	.+84     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 444:	08 95       	ret
				buzzerState = ON;
				PWM_on();
			}
			else
			{
				buzzerState = WAIT;
 446:	82 e0       	ldi	r24, 0x02	; 2
 448:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
 44c:	1b c0       	rjmp	.+54     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
			}
			break;
		case OFF:
			if(button == 0x04){
 44e:	84 30       	cpi	r24, 0x04	; 4
 450:	19 f4       	brne	.+6      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
				buzzerState = ON;
 452:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
 456:	20 c0       	rjmp	.+64     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
			}
			else {
				buzzerState = WAIT_BUFFER;
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
 45e:	0d c0       	rjmp	.+26     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
			}
			break;
		case ON:
			if (button == 0x04)
 460:	84 30       	cpi	r24, 0x04	; 4
 462:	21 f4       	brne	.+8      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
			{
				buzzerState = OFF;
 464:	83 e0       	ldi	r24, 0x03	; 3
 466:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
 46a:	11 c0       	rjmp	.+34     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
			}
			else
			{
				buzzerState = WAIT_BUFFER;
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <buzzerState>
 472:	03 c0       	rjmp	.+6      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
			}
			break;
		default:
			buzzerState = INIT;
 474:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <buzzerState>
 478:	08 95       	ret
	switch(buzzerState){
		case INIT:
			//buzzcnt = 0x00;
			break;
		case WAIT_BUFFER:
			set_PWM(0);
 47a:	60 e0       	ldi	r22, 0x00	; 0
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	cb 01       	movw	r24, r22
 480:	94 ce       	rjmp	.-728    	; 0x1aa <set_PWM>
			break;
 482:	08 95       	ret
		case WAIT:
			set_PWM(0);
 484:	60 e0       	ldi	r22, 0x00	; 0
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	cb 01       	movw	r24, r22
 48a:	8f ce       	rjmp	.-738    	; 0x1aa <set_PWM>
			break;
 48c:	08 95       	ret
		case OFF:
			set_PWM(0);
 48e:	60 e0       	ldi	r22, 0x00	; 0
 490:	70 e0       	ldi	r23, 0x00	; 0
 492:	cb 01       	movw	r24, r22
 494:	8a ce       	rjmp	.-748    	; 0x1aa <set_PWM>
			break;
 496:	08 95       	ret
		case ON:
			set_PWM(216.62);
 498:	68 eb       	ldi	r22, 0xB8	; 184
 49a:	7e e9       	ldi	r23, 0x9E	; 158
 49c:	88 e5       	ldi	r24, 0x58	; 88
 49e:	93 e4       	ldi	r25, 0x43	; 67
 4a0:	84 ce       	rjmp	.-760    	; 0x1aa <set_PWM>
 4a2:	08 95       	ret

000004a4 <main>:
	}
}
int main(void)
{
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 4a4:	11 b8       	out	0x01, r1	; 1
 4a6:	8f ef       	ldi	r24, 0xFF	; 255
 4a8:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 4aa:	84 b9       	out	0x04, r24	; 4
 4ac:	15 b8       	out	0x05, r1	; 5
	unsigned char button = 0x00;
	threeState = THREE_INIT;
 4ae:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <threeState>
	blinkState = BLINK_INIT;
 4b2:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <blinkState>
	combineState = COMBINE_INIT;
 4b6:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <combineState>
	TimerSet(2);
 4ba:	62 e0       	ldi	r22, 0x02	; 2
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	80 e0       	ldi	r24, 0x00	; 0
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	62 de       	rcall	.-828    	; 0x188 <TimerSet>
	TimerOn();
 4c4:	01 de       	rcall	.-1022   	; 0xc8 <TimerOn>
	//PWM_on();
	//set_PWM(261.62);
    while (1) 
    {
		button = ~PINA & 0x04;
		TickThree();
 4c6:	c0 b1       	in	r28, 0x00	; 0
		TickBlink();
 4c8:	e3 de       	rcall	.-570    	; 0x290 <TickThree>
 4ca:	33 df       	rcall	.-410    	; 0x332 <TickBlink>
		TickCombine();
 4cc:	7e df       	rcall	.-260    	; 0x3ca <TickCombine>
		TickBuzz(button);
 4ce:	8c 2f       	mov	r24, r28
 4d0:	80 95       	com	r24
 4d2:	84 70       	andi	r24, 0x04	; 4
 4d4:	8f df       	rcall	.-226    	; 0x3f4 <TickBuzz>
 4d6:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <TimerFlag>
		//set_PWM(261.62);
		while(!TimerFlag);
 4da:	88 23       	and	r24, r24
 4dc:	e1 f3       	breq	.-8      	; 0x4d6 <main+0x32>
 4de:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <TimerFlag>
		TimerFlag = 0;
 4e2:	f1 cf       	rjmp	.-30     	; 0x4c6 <main+0x22>

000004e4 <__cmpsf2>:
    }
 4e4:	9c d0       	rcall	.+312    	; 0x61e <__fp_cmp>
 4e6:	08 f4       	brcc	.+2      	; 0x4ea <__cmpsf2+0x6>
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	08 95       	ret

000004ec <__divsf3>:
 4ec:	0c d0       	rcall	.+24     	; 0x506 <__divsf3x>
 4ee:	d2 c0       	rjmp	.+420    	; 0x694 <__fp_round>
 4f0:	ca d0       	rcall	.+404    	; 0x686 <__fp_pscB>
 4f2:	40 f0       	brcs	.+16     	; 0x504 <__divsf3+0x18>
 4f4:	c1 d0       	rcall	.+386    	; 0x678 <__fp_pscA>
 4f6:	30 f0       	brcs	.+12     	; 0x504 <__divsf3+0x18>
 4f8:	21 f4       	brne	.+8      	; 0x502 <__divsf3+0x16>
 4fa:	5f 3f       	cpi	r21, 0xFF	; 255
 4fc:	19 f0       	breq	.+6      	; 0x504 <__divsf3+0x18>
 4fe:	b3 c0       	rjmp	.+358    	; 0x666 <__fp_inf>
 500:	51 11       	cpse	r21, r1
 502:	fc c0       	rjmp	.+504    	; 0x6fc <__fp_szero>
 504:	b6 c0       	rjmp	.+364    	; 0x672 <__fp_nan>

00000506 <__divsf3x>:
 506:	d7 d0       	rcall	.+430    	; 0x6b6 <__fp_split3>
 508:	98 f3       	brcs	.-26     	; 0x4f0 <__divsf3+0x4>

0000050a <__divsf3_pse>:
 50a:	99 23       	and	r25, r25
 50c:	c9 f3       	breq	.-14     	; 0x500 <__divsf3+0x14>
 50e:	55 23       	and	r21, r21
 510:	b1 f3       	breq	.-20     	; 0x4fe <__divsf3+0x12>
 512:	95 1b       	sub	r25, r21
 514:	55 0b       	sbc	r21, r21
 516:	bb 27       	eor	r27, r27
 518:	aa 27       	eor	r26, r26
 51a:	62 17       	cp	r22, r18
 51c:	73 07       	cpc	r23, r19
 51e:	84 07       	cpc	r24, r20
 520:	38 f0       	brcs	.+14     	; 0x530 <__divsf3_pse+0x26>
 522:	9f 5f       	subi	r25, 0xFF	; 255
 524:	5f 4f       	sbci	r21, 0xFF	; 255
 526:	22 0f       	add	r18, r18
 528:	33 1f       	adc	r19, r19
 52a:	44 1f       	adc	r20, r20
 52c:	aa 1f       	adc	r26, r26
 52e:	a9 f3       	breq	.-22     	; 0x51a <__divsf3_pse+0x10>
 530:	33 d0       	rcall	.+102    	; 0x598 <__divsf3_pse+0x8e>
 532:	0e 2e       	mov	r0, r30
 534:	3a f0       	brmi	.+14     	; 0x544 <__divsf3_pse+0x3a>
 536:	e0 e8       	ldi	r30, 0x80	; 128
 538:	30 d0       	rcall	.+96     	; 0x59a <__divsf3_pse+0x90>
 53a:	91 50       	subi	r25, 0x01	; 1
 53c:	50 40       	sbci	r21, 0x00	; 0
 53e:	e6 95       	lsr	r30
 540:	00 1c       	adc	r0, r0
 542:	ca f7       	brpl	.-14     	; 0x536 <__divsf3_pse+0x2c>
 544:	29 d0       	rcall	.+82     	; 0x598 <__divsf3_pse+0x8e>
 546:	fe 2f       	mov	r31, r30
 548:	27 d0       	rcall	.+78     	; 0x598 <__divsf3_pse+0x8e>
 54a:	66 0f       	add	r22, r22
 54c:	77 1f       	adc	r23, r23
 54e:	88 1f       	adc	r24, r24
 550:	bb 1f       	adc	r27, r27
 552:	26 17       	cp	r18, r22
 554:	37 07       	cpc	r19, r23
 556:	48 07       	cpc	r20, r24
 558:	ab 07       	cpc	r26, r27
 55a:	b0 e8       	ldi	r27, 0x80	; 128
 55c:	09 f0       	breq	.+2      	; 0x560 <__divsf3_pse+0x56>
 55e:	bb 0b       	sbc	r27, r27
 560:	80 2d       	mov	r24, r0
 562:	bf 01       	movw	r22, r30
 564:	ff 27       	eor	r31, r31
 566:	93 58       	subi	r25, 0x83	; 131
 568:	5f 4f       	sbci	r21, 0xFF	; 255
 56a:	2a f0       	brmi	.+10     	; 0x576 <__divsf3_pse+0x6c>
 56c:	9e 3f       	cpi	r25, 0xFE	; 254
 56e:	51 05       	cpc	r21, r1
 570:	68 f0       	brcs	.+26     	; 0x58c <__divsf3_pse+0x82>
 572:	79 c0       	rjmp	.+242    	; 0x666 <__fp_inf>
 574:	c3 c0       	rjmp	.+390    	; 0x6fc <__fp_szero>
 576:	5f 3f       	cpi	r21, 0xFF	; 255
 578:	ec f3       	brlt	.-6      	; 0x574 <__divsf3_pse+0x6a>
 57a:	98 3e       	cpi	r25, 0xE8	; 232
 57c:	dc f3       	brlt	.-10     	; 0x574 <__divsf3_pse+0x6a>
 57e:	86 95       	lsr	r24
 580:	77 95       	ror	r23
 582:	67 95       	ror	r22
 584:	b7 95       	ror	r27
 586:	f7 95       	ror	r31
 588:	9f 5f       	subi	r25, 0xFF	; 255
 58a:	c9 f7       	brne	.-14     	; 0x57e <__divsf3_pse+0x74>
 58c:	88 0f       	add	r24, r24
 58e:	91 1d       	adc	r25, r1
 590:	96 95       	lsr	r25
 592:	87 95       	ror	r24
 594:	97 f9       	bld	r25, 7
 596:	08 95       	ret
 598:	e1 e0       	ldi	r30, 0x01	; 1
 59a:	66 0f       	add	r22, r22
 59c:	77 1f       	adc	r23, r23
 59e:	88 1f       	adc	r24, r24
 5a0:	bb 1f       	adc	r27, r27
 5a2:	62 17       	cp	r22, r18
 5a4:	73 07       	cpc	r23, r19
 5a6:	84 07       	cpc	r24, r20
 5a8:	ba 07       	cpc	r27, r26
 5aa:	20 f0       	brcs	.+8      	; 0x5b4 <__divsf3_pse+0xaa>
 5ac:	62 1b       	sub	r22, r18
 5ae:	73 0b       	sbc	r23, r19
 5b0:	84 0b       	sbc	r24, r20
 5b2:	ba 0b       	sbc	r27, r26
 5b4:	ee 1f       	adc	r30, r30
 5b6:	88 f7       	brcc	.-30     	; 0x59a <__divsf3_pse+0x90>
 5b8:	e0 95       	com	r30
 5ba:	08 95       	ret

000005bc <__fixsfsi>:
 5bc:	04 d0       	rcall	.+8      	; 0x5c6 <__fixunssfsi>
 5be:	68 94       	set
 5c0:	b1 11       	cpse	r27, r1
 5c2:	9c c0       	rjmp	.+312    	; 0x6fc <__fp_szero>
 5c4:	08 95       	ret

000005c6 <__fixunssfsi>:
 5c6:	7f d0       	rcall	.+254    	; 0x6c6 <__fp_splitA>
 5c8:	88 f0       	brcs	.+34     	; 0x5ec <__fixunssfsi+0x26>
 5ca:	9f 57       	subi	r25, 0x7F	; 127
 5cc:	90 f0       	brcs	.+36     	; 0x5f2 <__fixunssfsi+0x2c>
 5ce:	b9 2f       	mov	r27, r25
 5d0:	99 27       	eor	r25, r25
 5d2:	b7 51       	subi	r27, 0x17	; 23
 5d4:	a0 f0       	brcs	.+40     	; 0x5fe <__fixunssfsi+0x38>
 5d6:	d1 f0       	breq	.+52     	; 0x60c <__fixunssfsi+0x46>
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	88 1f       	adc	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	1a f0       	brmi	.+6      	; 0x5e8 <__fixunssfsi+0x22>
 5e2:	ba 95       	dec	r27
 5e4:	c9 f7       	brne	.-14     	; 0x5d8 <__fixunssfsi+0x12>
 5e6:	12 c0       	rjmp	.+36     	; 0x60c <__fixunssfsi+0x46>
 5e8:	b1 30       	cpi	r27, 0x01	; 1
 5ea:	81 f0       	breq	.+32     	; 0x60c <__fixunssfsi+0x46>
 5ec:	86 d0       	rcall	.+268    	; 0x6fa <__fp_zero>
 5ee:	b1 e0       	ldi	r27, 0x01	; 1
 5f0:	08 95       	ret
 5f2:	83 c0       	rjmp	.+262    	; 0x6fa <__fp_zero>
 5f4:	67 2f       	mov	r22, r23
 5f6:	78 2f       	mov	r23, r24
 5f8:	88 27       	eor	r24, r24
 5fa:	b8 5f       	subi	r27, 0xF8	; 248
 5fc:	39 f0       	breq	.+14     	; 0x60c <__fixunssfsi+0x46>
 5fe:	b9 3f       	cpi	r27, 0xF9	; 249
 600:	cc f3       	brlt	.-14     	; 0x5f4 <__fixunssfsi+0x2e>
 602:	86 95       	lsr	r24
 604:	77 95       	ror	r23
 606:	67 95       	ror	r22
 608:	b3 95       	inc	r27
 60a:	d9 f7       	brne	.-10     	; 0x602 <__fixunssfsi+0x3c>
 60c:	3e f4       	brtc	.+14     	; 0x61c <__fixunssfsi+0x56>
 60e:	90 95       	com	r25
 610:	80 95       	com	r24
 612:	70 95       	com	r23
 614:	61 95       	neg	r22
 616:	7f 4f       	sbci	r23, 0xFF	; 255
 618:	8f 4f       	sbci	r24, 0xFF	; 255
 61a:	9f 4f       	sbci	r25, 0xFF	; 255
 61c:	08 95       	ret

0000061e <__fp_cmp>:
 61e:	99 0f       	add	r25, r25
 620:	00 08       	sbc	r0, r0
 622:	55 0f       	add	r21, r21
 624:	aa 0b       	sbc	r26, r26
 626:	e0 e8       	ldi	r30, 0x80	; 128
 628:	fe ef       	ldi	r31, 0xFE	; 254
 62a:	16 16       	cp	r1, r22
 62c:	17 06       	cpc	r1, r23
 62e:	e8 07       	cpc	r30, r24
 630:	f9 07       	cpc	r31, r25
 632:	c0 f0       	brcs	.+48     	; 0x664 <__fp_cmp+0x46>
 634:	12 16       	cp	r1, r18
 636:	13 06       	cpc	r1, r19
 638:	e4 07       	cpc	r30, r20
 63a:	f5 07       	cpc	r31, r21
 63c:	98 f0       	brcs	.+38     	; 0x664 <__fp_cmp+0x46>
 63e:	62 1b       	sub	r22, r18
 640:	73 0b       	sbc	r23, r19
 642:	84 0b       	sbc	r24, r20
 644:	95 0b       	sbc	r25, r21
 646:	39 f4       	brne	.+14     	; 0x656 <__fp_cmp+0x38>
 648:	0a 26       	eor	r0, r26
 64a:	61 f0       	breq	.+24     	; 0x664 <__fp_cmp+0x46>
 64c:	23 2b       	or	r18, r19
 64e:	24 2b       	or	r18, r20
 650:	25 2b       	or	r18, r21
 652:	21 f4       	brne	.+8      	; 0x65c <__fp_cmp+0x3e>
 654:	08 95       	ret
 656:	0a 26       	eor	r0, r26
 658:	09 f4       	brne	.+2      	; 0x65c <__fp_cmp+0x3e>
 65a:	a1 40       	sbci	r26, 0x01	; 1
 65c:	a6 95       	lsr	r26
 65e:	8f ef       	ldi	r24, 0xFF	; 255
 660:	81 1d       	adc	r24, r1
 662:	81 1d       	adc	r24, r1
 664:	08 95       	ret

00000666 <__fp_inf>:
 666:	97 f9       	bld	r25, 7
 668:	9f 67       	ori	r25, 0x7F	; 127
 66a:	80 e8       	ldi	r24, 0x80	; 128
 66c:	70 e0       	ldi	r23, 0x00	; 0
 66e:	60 e0       	ldi	r22, 0x00	; 0
 670:	08 95       	ret

00000672 <__fp_nan>:
 672:	9f ef       	ldi	r25, 0xFF	; 255
 674:	80 ec       	ldi	r24, 0xC0	; 192
 676:	08 95       	ret

00000678 <__fp_pscA>:
 678:	00 24       	eor	r0, r0
 67a:	0a 94       	dec	r0
 67c:	16 16       	cp	r1, r22
 67e:	17 06       	cpc	r1, r23
 680:	18 06       	cpc	r1, r24
 682:	09 06       	cpc	r0, r25
 684:	08 95       	ret

00000686 <__fp_pscB>:
 686:	00 24       	eor	r0, r0
 688:	0a 94       	dec	r0
 68a:	12 16       	cp	r1, r18
 68c:	13 06       	cpc	r1, r19
 68e:	14 06       	cpc	r1, r20
 690:	05 06       	cpc	r0, r21
 692:	08 95       	ret

00000694 <__fp_round>:
 694:	09 2e       	mov	r0, r25
 696:	03 94       	inc	r0
 698:	00 0c       	add	r0, r0
 69a:	11 f4       	brne	.+4      	; 0x6a0 <__fp_round+0xc>
 69c:	88 23       	and	r24, r24
 69e:	52 f0       	brmi	.+20     	; 0x6b4 <__fp_round+0x20>
 6a0:	bb 0f       	add	r27, r27
 6a2:	40 f4       	brcc	.+16     	; 0x6b4 <__fp_round+0x20>
 6a4:	bf 2b       	or	r27, r31
 6a6:	11 f4       	brne	.+4      	; 0x6ac <__fp_round+0x18>
 6a8:	60 ff       	sbrs	r22, 0
 6aa:	04 c0       	rjmp	.+8      	; 0x6b4 <__fp_round+0x20>
 6ac:	6f 5f       	subi	r22, 0xFF	; 255
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	08 95       	ret

000006b6 <__fp_split3>:
 6b6:	57 fd       	sbrc	r21, 7
 6b8:	90 58       	subi	r25, 0x80	; 128
 6ba:	44 0f       	add	r20, r20
 6bc:	55 1f       	adc	r21, r21
 6be:	59 f0       	breq	.+22     	; 0x6d6 <__fp_splitA+0x10>
 6c0:	5f 3f       	cpi	r21, 0xFF	; 255
 6c2:	71 f0       	breq	.+28     	; 0x6e0 <__fp_splitA+0x1a>
 6c4:	47 95       	ror	r20

000006c6 <__fp_splitA>:
 6c6:	88 0f       	add	r24, r24
 6c8:	97 fb       	bst	r25, 7
 6ca:	99 1f       	adc	r25, r25
 6cc:	61 f0       	breq	.+24     	; 0x6e6 <__fp_splitA+0x20>
 6ce:	9f 3f       	cpi	r25, 0xFF	; 255
 6d0:	79 f0       	breq	.+30     	; 0x6f0 <__fp_splitA+0x2a>
 6d2:	87 95       	ror	r24
 6d4:	08 95       	ret
 6d6:	12 16       	cp	r1, r18
 6d8:	13 06       	cpc	r1, r19
 6da:	14 06       	cpc	r1, r20
 6dc:	55 1f       	adc	r21, r21
 6de:	f2 cf       	rjmp	.-28     	; 0x6c4 <__fp_split3+0xe>
 6e0:	46 95       	lsr	r20
 6e2:	f1 df       	rcall	.-30     	; 0x6c6 <__fp_splitA>
 6e4:	08 c0       	rjmp	.+16     	; 0x6f6 <__fp_splitA+0x30>
 6e6:	16 16       	cp	r1, r22
 6e8:	17 06       	cpc	r1, r23
 6ea:	18 06       	cpc	r1, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	f1 cf       	rjmp	.-30     	; 0x6d2 <__fp_splitA+0xc>
 6f0:	86 95       	lsr	r24
 6f2:	71 05       	cpc	r23, r1
 6f4:	61 05       	cpc	r22, r1
 6f6:	08 94       	sec
 6f8:	08 95       	ret

000006fa <__fp_zero>:
 6fa:	e8 94       	clt

000006fc <__fp_szero>:
 6fc:	bb 27       	eor	r27, r27
 6fe:	66 27       	eor	r22, r22
 700:	77 27       	eor	r23, r23
 702:	cb 01       	movw	r24, r22
 704:	97 f9       	bld	r25, 7
 706:	08 95       	ret

00000708 <__gesf2>:
 708:	8a df       	rcall	.-236    	; 0x61e <__fp_cmp>
 70a:	08 f4       	brcc	.+2      	; 0x70e <__gesf2+0x6>
 70c:	8f ef       	ldi	r24, 0xFF	; 255
 70e:	08 95       	ret

00000710 <__mulsf3>:
 710:	0b d0       	rcall	.+22     	; 0x728 <__mulsf3x>
 712:	c0 cf       	rjmp	.-128    	; 0x694 <__fp_round>
 714:	b1 df       	rcall	.-158    	; 0x678 <__fp_pscA>
 716:	28 f0       	brcs	.+10     	; 0x722 <__mulsf3+0x12>
 718:	b6 df       	rcall	.-148    	; 0x686 <__fp_pscB>
 71a:	18 f0       	brcs	.+6      	; 0x722 <__mulsf3+0x12>
 71c:	95 23       	and	r25, r21
 71e:	09 f0       	breq	.+2      	; 0x722 <__mulsf3+0x12>
 720:	a2 cf       	rjmp	.-188    	; 0x666 <__fp_inf>
 722:	a7 cf       	rjmp	.-178    	; 0x672 <__fp_nan>
 724:	11 24       	eor	r1, r1
 726:	ea cf       	rjmp	.-44     	; 0x6fc <__fp_szero>

00000728 <__mulsf3x>:
 728:	c6 df       	rcall	.-116    	; 0x6b6 <__fp_split3>
 72a:	a0 f3       	brcs	.-24     	; 0x714 <__mulsf3+0x4>

0000072c <__mulsf3_pse>:
 72c:	95 9f       	mul	r25, r21
 72e:	d1 f3       	breq	.-12     	; 0x724 <__mulsf3+0x14>
 730:	95 0f       	add	r25, r21
 732:	50 e0       	ldi	r21, 0x00	; 0
 734:	55 1f       	adc	r21, r21
 736:	62 9f       	mul	r22, r18
 738:	f0 01       	movw	r30, r0
 73a:	72 9f       	mul	r23, r18
 73c:	bb 27       	eor	r27, r27
 73e:	f0 0d       	add	r31, r0
 740:	b1 1d       	adc	r27, r1
 742:	63 9f       	mul	r22, r19
 744:	aa 27       	eor	r26, r26
 746:	f0 0d       	add	r31, r0
 748:	b1 1d       	adc	r27, r1
 74a:	aa 1f       	adc	r26, r26
 74c:	64 9f       	mul	r22, r20
 74e:	66 27       	eor	r22, r22
 750:	b0 0d       	add	r27, r0
 752:	a1 1d       	adc	r26, r1
 754:	66 1f       	adc	r22, r22
 756:	82 9f       	mul	r24, r18
 758:	22 27       	eor	r18, r18
 75a:	b0 0d       	add	r27, r0
 75c:	a1 1d       	adc	r26, r1
 75e:	62 1f       	adc	r22, r18
 760:	73 9f       	mul	r23, r19
 762:	b0 0d       	add	r27, r0
 764:	a1 1d       	adc	r26, r1
 766:	62 1f       	adc	r22, r18
 768:	83 9f       	mul	r24, r19
 76a:	a0 0d       	add	r26, r0
 76c:	61 1d       	adc	r22, r1
 76e:	22 1f       	adc	r18, r18
 770:	74 9f       	mul	r23, r20
 772:	33 27       	eor	r19, r19
 774:	a0 0d       	add	r26, r0
 776:	61 1d       	adc	r22, r1
 778:	23 1f       	adc	r18, r19
 77a:	84 9f       	mul	r24, r20
 77c:	60 0d       	add	r22, r0
 77e:	21 1d       	adc	r18, r1
 780:	82 2f       	mov	r24, r18
 782:	76 2f       	mov	r23, r22
 784:	6a 2f       	mov	r22, r26
 786:	11 24       	eor	r1, r1
 788:	9f 57       	subi	r25, 0x7F	; 127
 78a:	50 40       	sbci	r21, 0x00	; 0
 78c:	8a f0       	brmi	.+34     	; 0x7b0 <__mulsf3_pse+0x84>
 78e:	e1 f0       	breq	.+56     	; 0x7c8 <__mulsf3_pse+0x9c>
 790:	88 23       	and	r24, r24
 792:	4a f0       	brmi	.+18     	; 0x7a6 <__mulsf3_pse+0x7a>
 794:	ee 0f       	add	r30, r30
 796:	ff 1f       	adc	r31, r31
 798:	bb 1f       	adc	r27, r27
 79a:	66 1f       	adc	r22, r22
 79c:	77 1f       	adc	r23, r23
 79e:	88 1f       	adc	r24, r24
 7a0:	91 50       	subi	r25, 0x01	; 1
 7a2:	50 40       	sbci	r21, 0x00	; 0
 7a4:	a9 f7       	brne	.-22     	; 0x790 <__mulsf3_pse+0x64>
 7a6:	9e 3f       	cpi	r25, 0xFE	; 254
 7a8:	51 05       	cpc	r21, r1
 7aa:	70 f0       	brcs	.+28     	; 0x7c8 <__mulsf3_pse+0x9c>
 7ac:	5c cf       	rjmp	.-328    	; 0x666 <__fp_inf>
 7ae:	a6 cf       	rjmp	.-180    	; 0x6fc <__fp_szero>
 7b0:	5f 3f       	cpi	r21, 0xFF	; 255
 7b2:	ec f3       	brlt	.-6      	; 0x7ae <__mulsf3_pse+0x82>
 7b4:	98 3e       	cpi	r25, 0xE8	; 232
 7b6:	dc f3       	brlt	.-10     	; 0x7ae <__mulsf3_pse+0x82>
 7b8:	86 95       	lsr	r24
 7ba:	77 95       	ror	r23
 7bc:	67 95       	ror	r22
 7be:	b7 95       	ror	r27
 7c0:	f7 95       	ror	r31
 7c2:	e7 95       	ror	r30
 7c4:	9f 5f       	subi	r25, 0xFF	; 255
 7c6:	c1 f7       	brne	.-16     	; 0x7b8 <__mulsf3_pse+0x8c>
 7c8:	fe 2b       	or	r31, r30
 7ca:	88 0f       	add	r24, r24
 7cc:	91 1d       	adc	r25, r1
 7ce:	96 95       	lsr	r25
 7d0:	87 95       	ror	r24
 7d2:	97 f9       	bld	r25, 7
 7d4:	08 95       	ret

000007d6 <_exit>:
 7d6:	f8 94       	cli

000007d8 <__stop_program>:
 7d8:	ff cf       	rjmp	.-2      	; 0x7d8 <__stop_program>
