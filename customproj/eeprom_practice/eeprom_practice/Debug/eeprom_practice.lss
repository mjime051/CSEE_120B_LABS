
eeprom_practice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ab  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .eeprom       0000000d  00810000  00810000  0000019e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000030  00000000  00000000  000001ab  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000220  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b61  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000841  00000000  00000000  00000e01  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000441  00000000  00000000  00001642  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00001a84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000484  00000000  00000000  00001ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000067  00000000  00000000  00001f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00001fa3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	45 c0       	rjmp	.+138    	; 0x126 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <avr/eeprom.h>
unsigned char EEMEM NonVolatileChar = 0x02;
uint16_t EEMEM NonVolatileInt;
uint8_t EEMEM NonVolatileString[10];
int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	1f 92       	push	r1
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
	DDRD = 0xFF; PORTD = 0x00;
  a8:	8f ef       	ldi	r24, 0xFF	; 255
  aa:	8a b9       	out	0x0a, r24	; 10
  ac:	1b b8       	out	0x0b, r1	; 11
	unsigned char SRAMchar;
	uint16_t SRAMint;
	uint8_t SRAMstring;
	unsigned char hiScore = eeprom_read_byte(&NonVolatileChar);
  ae:	8c e0       	ldi	r24, 0x0C	; 12
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	23 d0       	rcall	.+70     	; 0xfa <eeprom_read_byte>
	if (hiScore == 0xFF)
  b4:	8f 3f       	cpi	r24, 0xFF	; 255
  b6:	21 f4       	brne	.+8      	; 0xc0 <main+0x22>
	{
		hiScore = 5;
		eeprom_write_byte(&NonVolatileChar,hiScore);
  b8:	65 e0       	ldi	r22, 0x05	; 5
  ba:	8c e0       	ldi	r24, 0x0C	; 12
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	25 d0       	rcall	.+74     	; 0x10a <eeprom_write_byte>
	}
	//eeprom_write_byte(&NonVolatileChar, 0x08);
	SRAMchar = eeprom_read_byte(&NonVolatileChar);
  c0:	8c e0       	ldi	r24, 0x0C	; 12
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	1a d0       	rcall	.+52     	; 0xfa <eeprom_read_byte>
  c6:	18 2f       	mov	r17, r24
	SRAMint = eeprom_read_word(&NonVolatileInt);
	eeprom_read_block((void*)&SRAMstring, (const void*)&NonVolatileString, 10);
  c8:	4a e0       	ldi	r20, 0x0A	; 10
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	70 e0       	ldi	r23, 0x00	; 0
  d0:	ce 01       	movw	r24, r28
  d2:	01 96       	adiw	r24, 0x01	; 1
  d4:	02 d0       	rcall	.+4      	; 0xda <eeprom_read_block>
	while(1){
		PORTD = SRAMchar;
  d6:	1b b9       	out	0x0b, r17	; 11
  d8:	fe cf       	rjmp	.-4      	; 0xd6 <main+0x38>

000000da <eeprom_read_block>:
  da:	dc 01       	movw	r26, r24
  dc:	cb 01       	movw	r24, r22

000000de <eeprom_read_blraw>:
  de:	fc 01       	movw	r30, r24
  e0:	f9 99       	sbic	0x1f, 1	; 31
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <eeprom_read_blraw+0x2>
  e4:	06 c0       	rjmp	.+12     	; 0xf2 <eeprom_read_blraw+0x14>
  e6:	f2 bd       	out	0x22, r31	; 34
  e8:	e1 bd       	out	0x21, r30	; 33
  ea:	f8 9a       	sbi	0x1f, 0	; 31
  ec:	31 96       	adiw	r30, 0x01	; 1
  ee:	00 b4       	in	r0, 0x20	; 32
  f0:	0d 92       	st	X+, r0
  f2:	41 50       	subi	r20, 0x01	; 1
  f4:	50 40       	sbci	r21, 0x00	; 0
  f6:	b8 f7       	brcc	.-18     	; 0xe6 <eeprom_read_blraw+0x8>
  f8:	08 95       	ret

000000fa <eeprom_read_byte>:
  fa:	f9 99       	sbic	0x1f, 1	; 31
  fc:	fe cf       	rjmp	.-4      	; 0xfa <eeprom_read_byte>
  fe:	92 bd       	out	0x22, r25	; 34
 100:	81 bd       	out	0x21, r24	; 33
 102:	f8 9a       	sbi	0x1f, 0	; 31
 104:	99 27       	eor	r25, r25
 106:	80 b5       	in	r24, 0x20	; 32
 108:	08 95       	ret

0000010a <eeprom_write_byte>:
 10a:	26 2f       	mov	r18, r22

0000010c <eeprom_write_r18>:
 10c:	f9 99       	sbic	0x1f, 1	; 31
 10e:	fe cf       	rjmp	.-4      	; 0x10c <eeprom_write_r18>
 110:	1f ba       	out	0x1f, r1	; 31
 112:	92 bd       	out	0x22, r25	; 34
 114:	81 bd       	out	0x21, r24	; 33
 116:	20 bd       	out	0x20, r18	; 32
 118:	0f b6       	in	r0, 0x3f	; 63
 11a:	f8 94       	cli
 11c:	fa 9a       	sbi	0x1f, 2	; 31
 11e:	f9 9a       	sbi	0x1f, 1	; 31
 120:	0f be       	out	0x3f, r0	; 63
 122:	01 96       	adiw	r24, 0x01	; 1
 124:	08 95       	ret

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
